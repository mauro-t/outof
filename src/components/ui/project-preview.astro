---
type Props = {
  slug: string;
  title: string;
  talents: string[];
  image?: { src: string };
};

const { slug, title, talents, image } = Astro.props;
---

<div
  data-project-preview
  class="group relative overflow-x-clip text-center hover:z-10"
>
  {
    image && (
      <img
        src={image.src}
        class="pointer-events-none absolute top-1/2 left-0 h-auto max-h-115 w-auto max-w-115 -translate-1/2 opacity-0"
      />
    )
  }
  <a href={`/portfolio/${slug}`} class="relative font-serif text-title-md"
    >{title} &mdash; <span class="italic">{talents?.join(", ")}</span></a
  >
</div>

<script>
  import { animate } from "motion";

  const rotations = [-24, -12, -6, 6, 12, 24];

  const p = document.querySelectorAll<HTMLDivElement>("[data-project-preview]");

  p.forEach((preview) => {
    const img = preview.querySelector<HTMLImageElement>(":scope img");
    preview.addEventListener("mouseenter", ({ clientX }) => {
      if (!img) return;
      img.style.left = clientX + "px";
      img.style.rotate =
        rotations[Math.floor(Math.random() * rotations.length - 1)] + "deg";
      animate(
        img,
        {
          opacity: 100,
        },
        { duration: 0.35 }
      );
    });
    preview.addEventListener("mousemove", ({ clientX }) => {
      if (!img) return;
      img.style.left = clientX + "px";
    });
    preview.addEventListener("mouseleave", () => {
      if (!img) return;
      animate(
        img,
        {
          opacity: 0,
        },
        {
          duration: 0.55,
        }
      );
    });
  });
</script>
